const selecioneB = (element) => document.querySelector(element);
const selecioneAllB = (element) => document.querySelectorAll(element);

// Variáveis globais
let modalKeyB = 0;
let quantBebidas = 1;
let cartB = [];
let produtoSelecionadoB = null;

// Funções monetárias
const formatoRealB = (valor) => {
    return valor.toLocaleString('pt-BR', { style: 'currency', currency: 'BRL' });
};

const formatoMonetarioB = (valor) => {
    if(valor){
        return valor.toFixed(2);
    }
};

// Função para pegar keys
const getKeyB = (e) => {
    const keyB = e.target.closest('.produtos-item-bebidas').getAttribute('data-key');
    console.log('Bebida clicada' + keyB);

    produtoSelecionadoB = foodJson[keyB];
    quantBebidas = 1;
    modalKeyB = keyB;

    return keyB;
};

// Função para capturar a quantidade dos itens
const changeQuantityB = () => {
    selecioneB('.bebidaInfo--qtmais').addEventListener('click', () => {
        quantBebidas++;
        selecioneB('.bebidaInfo--qt').innerHTML = quantBebidas;
    });

    selecioneB('.bebidaInfo--qtmenos').addEventListener('click', () => {
        if(quantBebidas > 1){
            quantBebidas--;
            selecioneB('.bebidaInfo--qt').innerHTML = quantBebidas;
        }
    });
};

// Função para fechar
const closeButtonB = () => {
    selecioneAllB('.bebidaInfo--cancelButton, .bebidaInfo--cancelMobileButton').forEach((item) => {
        item.addEventListener('click', closeModalB);
    });
};

// Função para clicar nos itens
const handleClickBebida = (e) => {
    e.preventDefault();

    const parent = e.target.parentElement;
    document.querySelector('.bebidaBig img').src = parent.querySelector('.produto-item-bebida-img').firstChild.src;

    const grandParent = e.target.parentElement.parentElement;
    document.querySelector('.bebidaInfo--nome').textContent = grandParent.querySelector('.produto-item-bebida-name').textContent;
    document.querySelector('.bebidaInfo--price').textContent = grandParent.querySelector('.produto-item-bebida-price').textContent;
    document.querySelector('.bebidaInfo--desc').textContent = grandParent.querySelector('.produto-item-bebida-desc').textContent;

    abrirModalB();
};

// Função para abrir o modal
const abrirModalB = () => {
    const modalB = selecioneB('.bebidaWindowArea');
    modalB.style.opacity = 1;
    modalB.style.display = 'flex';

    setTimeout(() => {
        modalB.style.opacity = 1;

        if (produtoSelecionadoB) {
            fillModalData(produtoSelecionadoB);
        }
    }, 150);
};

// Função para fechar o modal
const closeModalB = () => {
    const modalB = selecioneB('.bebidaWindowArea');
    modalB.style.opacity = 0;
    setTimeout(() => {
        modalB.style.display = 'none';
    }, 500);
};

// Função para adicionar no carrinho
const addToCartB = () => {
    selecioneB('.bebidaInfo--addButton').addEventListener('click', () => {
        const priceBebida = parseFloat(selecioneB('.bebidaInfo--price').textContent.replace("R$", "").replace(",", "."));
        const sizeB = selecioneB('.bebida-area').getAttribute('data-key');
        const identifierB = sizeB;
        const nomeBebidas = selecioneB('.bebidaInfo--nome').textContent;

        // Armazenar imagem e nome
        const imgBebidas = selecioneB('.bebidaBig img').getAttribute('src');
        const nomeBebida = nomeBebidas;

        const cartIndexB = cartB.findIndex((item) => item.identifierB === identifierB);

        if(cartIndexB > -1){
            // Se o item já estiver no carrinho, apenas atualize a quantidade
            cartB[cartIndexB].qt += quantBebidas;
            updateCartB(); // Atualizar o carrinho após modificar a quantidade
        } else {
            // Se o item não estiver no carrinho, adicione-o
            const bebida = {
                identifierB,
                id: sizeB,
                name: nomeBebida,
                img: imgBebidas,
                qt: quantBebidas,
                price: priceBebida
            }
            cartB.push(bebida);

            // Adicionar novo item ao carrinho
            const cartItemB = selecioneB('.models .cart-produtos').cloneNode(true);
            cartItemB.querySelector('.cart-produto-name').innerHTML = nomeBebida;
            cartItemB.querySelector('img').src = imgBebidas;
            cartItemB.querySelector('.cart-produto-qt').innerHTML = quantBebidas;

            cartItemB.querySelector('.cart-produto-qtmais').addEventListener('click', () => {
                cartIndexB.qt++;
                updateCartB();
            });

            cartItemB.querySelector('.cart-produto-qtmenos').addEventListener('click', () => {
                if(cartB[cartIndexB].qt > 1){
                    cartB[cartIndexB].qt--;
                    updateCartB(cartIndexB); // Atualizar o item no carrinho após modificar a quantidade
                } else {
                    cartB.splice(cartIndexB, 1);
                    cartItemB.remove();
                    updateCartB();
                }
            });

            selecioneB('.cart').append(cartItemB);
        }
        closeModalB();
        openCartB();
    });
};

// Função para atualizar o carrinho
const updateCartB = () => {
    selecioneB('.menu-openner span').innerHTML = cartB.length;

    if(cartB.length > 0){
        selecioneB('aside').classList.add('show');
        selecioneB('header').style.display = 'flex';

        let subtotal = 0;

        for(let i=0;i<cartB.length;i++){
            const bebidaItem = bebidaJson.find((item) => item.id == cartB[i].id);

            subtotal += cartB[i].qt * cartB[i].price;

            const cartItemB = selecioneB('.models .cart-produtos').cloneNode(true);
            selecioneB('.cart-produtos').append(cartItemB);

            const bebidaSizeName = cartB[i].tipoBebida;
            const bebidaName = `${bebidaItem.nomeBebida} (${bebidaSizeName});`

            cartItemB.querySelector('img').src = cartB[i].img;
            cartItemB.querySelector('.cart-produto-name').innerHTML = cartB[i].name;

            cartItemB.querySelector('.cart-produto-qt').innerHTML = cartB[i].qt;

            cartItemB.querySelector('.cart-produto-qtmais').addEventListener('click', () => {
                cartB[i].qt++;
                updateCartB();
            });

            cartItemB.querySelector('.cart-produto-qtmenos').addEventListener('click', () => {
                if(cartB[i].qt > 1){
                    cartB[i].qt--;
                } else {
                    cartB.splice(i, 1);
                    cartItemB.remove();
                    i--;
                    const cartSubtotal = selecioneB('.cart-totalitem.subtotal span:last-child');
                    const cartTotal = selecioneB('.cart-totalitem.total span:last-child');
                    cartSubtotal = "";
                    cartTotal = "";
                    updateCartB();
                }
                if(cartB.length < 1){
                    selecioneB('header').style.display = 'flex';
                    updateCartB();
                }
                    updateCartB();
                });
                selecioneB('.cart').append(cartItemB);
        }

        const total = subtotal;
        selecioneB('.cart--totalitem.subtotal span:last-child').innerHTML = formatoMonetarioB(subtotal);
        selecioneB('.cart--totalitem.total span:last-child').innerHTML = formatoMonetarioB(total);
    } else {
        selecioneB('aside').classList.remove('show');
        selecioneB('aside').style.left = '100vw';
    }
};

// Função para completar a compra
const completePurchaseB = () => {
    selecioneB('.cart--finalizar').addEventListener('click', () => {
        cartB = [];
        selecioneB('.menu-openner span').innerHTML = 0;
        selecioneB('aside').classList.remove('show');
        selecioneB('aside').style.left = '100vw';
        selecioneB('header').style.display = 'flex';
        updateCartB();
    });
};

// Função para abrir o carrinho
const openCartB = () => {
    if(cartB.length > 0){
        selecioneB('aside').classList.add('show');
        selecioneB('header').style.display = 'flex';
    }

    selecioneB('.menu-openner').addEventListener('click', () => {
        selecioneB('aside').style.left = '100vw';
        selecioneB('header').style.display = 'flex';
    });
};

// Função para fechar o carrinho
const closeCartB = () => {
    selecioneB('.menu-openner').addEventListener('click', () => {
        selecioneB('aside').style.left = '100vw';
        selecioneB('header').style.display = 'flex';
    });
};

// Função para iniciar todo o código
const iniciarB = () => {
    const produtoItemsB = selecioneAllB('.bebida-area .produtos-item-bebidas');
    produtoItemsB.forEach((produtoItemsB) => {
        produtoItemsB.addEventListener('click', handleClickBebida);
    });

    closeButtonB();
    changeQuantityB();
    addToCartB();
    openCartB();
    closeCartB();
    completePurchaseB();
};

iniciarB();
